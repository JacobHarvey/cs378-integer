        -:    0:Source:TestInteger.c++
        -:    0:Graph:TestInteger.gcno
        -:    0:Data:TestInteger.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// --------
        -:    2:// includes
        -:    3:// --------
        -:    4:
        -:    5:#include <iostream> // cout, endl
        -:    6:#include <sstream>  // istringtstream, ostringstream
        -:    7:#include <string>   // string
        -:    8:#include <utility>  // pair
        -:    9:#include <vector>   // vector
        -:   10:
        -:   11:#include "gtest/gtest.h"
        -:   12:
        -:   13:#include "Integer.h"
        -:   14:
        -:   15:using namespace std;
        -:   16:
        -:   17:// -----------
        -:   18:// TestInteger
        -:   19:// -----------
        -:   20:
        -:   21:// ----
        -:   22:// shift_left_digits
        -:   23:// ----
        -:   24:
function _ZN39IntegerFixture_shift_left_digits_1_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN39IntegerFixture_shift_left_digits_1_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN39IntegerFixture_shift_left_digits_1_Test8TestBodyEv called 1 returned 100% blocks executed 53%
function _ZN39IntegerFixture_shift_left_digits_1_TestC2Ev called 1 returned 100% blocks executed 100%
        5:   25:TEST(IntegerFixture, shift_left_digits_1) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:   26:
        1:   27:    	int array[] = {1, 1, 1};
        1:   28:    	vector<int> og (array, array + sizeof(array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        1:   29:    	int n = 2;
        1:   30:	int real[] = {0, 0, 1, 1, 1};
        2:   31:	vector<int> real_answer (real, real + sizeof(real) /sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
        2:   32:	std::vector<int> output(5, 0);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
        1:   33:	std::vector<int>::iterator og_b = og.begin();
call    0 returned 100%
        1:   34:	std::vector<int>::iterator og_e = og.end();
call    0 returned 100%
        1:   35:        std::vector<int>::iterator output_b = output.begin();
call    0 returned 100%
        -:   36:
        1:   37:	std::vector<int>::iterator output_e = shift_left_digits(og_b, og_e, n, output_b);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:   38:	
        2:   39:    	ASSERT_EQ(real_answer, output);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 returned 100%
branch 21 taken 100%
branch 22 taken 0%
call   23 returned 100%
branch 24 taken 100%
branch 25 taken 0%
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
        -:   40:        
        -:   41:}
        -:   42:
function _ZN39IntegerFixture_shift_left_digits_2_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN39IntegerFixture_shift_left_digits_2_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN39IntegerFixture_shift_left_digits_2_Test8TestBodyEv called 1 returned 100% blocks executed 53%
function _ZN39IntegerFixture_shift_left_digits_2_TestC2Ev called 1 returned 100% blocks executed 100%
        5:   43:TEST(IntegerFixture, shift_left_digits_2) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:   44:
        1:   45:        int array[] = {2, 1, 1, 8};
        1:   46:        vector<int> og (array, array + sizeof(array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        1:   47:        int n = 7;
        1:   48:        int real[] = {0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 8};
        2:   49:        vector<int> real_answer (real, real + sizeof(real) /sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
        2:   50:        std::vector<int> output(11, 0);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
        1:   51:        std::vector<int>::iterator og_b = og.begin();
call    0 returned 100%
        1:   52:        std::vector<int>::iterator og_e = og.end();
call    0 returned 100%
        1:   53:        std::vector<int>::iterator output_b = output.begin();
call    0 returned 100%
        -:   54:
        1:   55:        std::vector<int>::iterator output_e = shift_left_digits(og_b, og_e, n, output_b);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:   56:
        2:   57:        ASSERT_EQ(real_answer, output);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 returned 100%
branch 21 taken 100%
branch 22 taken 0%
call   23 returned 100%
branch 24 taken 100%
branch 25 taken 0%
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
        -:   58:
        -:   59:}
        -:   60:
function _ZN39IntegerFixture_shift_left_digits_3_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN39IntegerFixture_shift_left_digits_3_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN39IntegerFixture_shift_left_digits_3_Test8TestBodyEv called 1 returned 100% blocks executed 53%
function _ZN39IntegerFixture_shift_left_digits_3_TestC2Ev called 1 returned 100% blocks executed 100%
        5:   61:TEST(IntegerFixture, shift_left_digits_3) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:   62:
        1:   63:        int array[] = {5};
        1:   64:        vector<int> og (array, array + sizeof(array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        1:   65:        int n = 7;
        1:   66:        int real[] = {0, 0, 0, 0, 0, 0, 0, 5};
        2:   67:        vector<int> real_answer (real, real + sizeof(real) /sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
        2:   68:        std::vector<int> output(8, 0);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
        1:   69:        std::vector<int>::iterator og_b = og.begin();
call    0 returned 100%
        1:   70:        std::vector<int>::iterator og_e = og.end();
call    0 returned 100%
        1:   71:        std::vector<int>::iterator output_b = output.begin();
call    0 returned 100%
        -:   72:
        1:   73:        std::vector<int>::iterator output_e = shift_left_digits(og_b, og_e, n, output_b);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:   74:
        2:   75:        ASSERT_EQ(real_answer, output);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 returned 100%
branch 21 taken 100%
branch 22 taken 0%
call   23 returned 100%
branch 24 taken 100%
branch 25 taken 0%
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
        -:   76:
        -:   77:}
        -:   78:
        -:   79:// ----
        -:   80:// shift_right_digits
        -:   81:// ----
        -:   82:
function _ZN40IntegerFixture_shift_right_digits_1_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN40IntegerFixture_shift_right_digits_1_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN40IntegerFixture_shift_right_digits_1_Test8TestBodyEv called 1 returned 100% blocks executed 53%
function _ZN40IntegerFixture_shift_right_digits_1_TestC2Ev called 1 returned 100% blocks executed 100%
        5:   83:TEST(IntegerFixture, shift_right_digits_1) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:   84:
        1:   85:        int array[] = {1, 1, 1};
        1:   86:        vector<int> og (array, array + sizeof(array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        1:   87:        int n = 2;
        1:   88:        int real[] = { 1};
        2:   89:        vector<int> real_answer (real, real + sizeof(real) /sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
        2:   90:        std::vector<int> output(1, 0);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
        1:   91:        std::vector<int>::iterator og_b = og.begin();
call    0 returned 100%
        1:   92:        std::vector<int>::iterator og_e = og.end();
call    0 returned 100%
        1:   93:        std::vector<int>::iterator output_b = output.begin();
call    0 returned 100%
        -:   94:
        1:   95:        std::vector<int>::iterator output_e = shift_right_digits(og_b, og_e, n, output_b);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:   96:
        2:   97:        ASSERT_EQ(real_answer, output);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 returned 100%
branch 21 taken 100%
branch 22 taken 0%
call   23 returned 100%
branch 24 taken 100%
branch 25 taken 0%
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
        -:   98:
        -:   99:}
        -:  100:
        -:  101:
function _ZN40IntegerFixture_shift_right_digits_2_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN40IntegerFixture_shift_right_digits_2_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN40IntegerFixture_shift_right_digits_2_Test8TestBodyEv called 1 returned 100% blocks executed 53%
function _ZN40IntegerFixture_shift_right_digits_2_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  102:TEST(IntegerFixture, shift_right_digits_2) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  103:
        1:  104:        int array[] = {2, 3, 4, 6, 7};
        1:  105:        vector<int> og (array, array + sizeof(array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        1:  106:        int n = 3;
        1:  107:        int real[] = {6, 7};
        2:  108:        vector<int> real_answer (real, real + sizeof(real) /sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
        2:  109:        vector<int> output(2, 0);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
        1:  110:        vector<int>::iterator og_b = og.begin();
call    0 returned 100%
        1:  111:        vector<int>::iterator og_e = og.end();
call    0 returned 100%
        1:  112:        vector<int>::iterator output_b = output.begin();
call    0 returned 100%
        -:  113:
        1:  114:        vector<int>::iterator output_e = shift_right_digits(og_b, og_e, n, output_b);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:  115:
        2:  116:        ASSERT_EQ(real_answer, output);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 returned 100%
branch 21 taken 100%
branch 22 taken 0%
call   23 returned 100%
branch 24 taken 100%
branch 25 taken 0%
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
        -:  117:
        -:  118:}
        -:  119:
function _ZN40IntegerFixture_shift_right_digits_3_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN40IntegerFixture_shift_right_digits_3_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN40IntegerFixture_shift_right_digits_3_Test8TestBodyEv called 1 returned 100% blocks executed 53%
function _ZN40IntegerFixture_shift_right_digits_3_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  120:TEST(IntegerFixture, shift_right_digits_3) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  121:
        1:  122:        int array[] = {2, 3, 4};
        1:  123:        vector<int> og (array, array + sizeof(array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        1:  124:        int n = 1;
        1:  125:        int real[] = {3, 4};
        2:  126:        vector<int> real_answer (real, real + sizeof(real) /sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
        2:  127:        vector<int> output(2, 0);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
        1:  128:        vector<int>::iterator og_b = og.begin();
call    0 returned 100%
        1:  129:        vector<int>::iterator og_e = og.end();
call    0 returned 100%
        1:  130:        vector<int>::iterator output_b = output.begin();
call    0 returned 100%
        -:  131:
        1:  132:        vector<int>::iterator output_e = shift_right_digits(og_b, og_e, n, output_b);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:  133:
        2:  134:        ASSERT_EQ(real_answer, output);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 returned 100%
branch 21 taken 100%
branch 22 taken 0%
call   23 returned 100%
branch 24 taken 100%
branch 25 taken 0%
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
        -:  135:
        -:  136:}
        -:  137:
        -:  138:// ----
        -:  139:// plus_digits
        -:  140:// ----
        -:  141:
function _ZN33IntegerFixture_plus_digits_1_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN33IntegerFixture_plus_digits_1_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN33IntegerFixture_plus_digits_1_Test8TestBodyEv called 1 returned 100% blocks executed 55%
function _ZN33IntegerFixture_plus_digits_1_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  142:TEST(IntegerFixture, plus_digits_1) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  143:	//(11 ) <- carries
        -:  144:	// 432
        -:  145:	//+
        -:  146:	// 789
        -:  147:	//------
        -:  148:	//1221
        1:  149:        int array[] = {2, 3, 4};
        1:  150:        vector<int> og (array, array + sizeof(array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        1:  151:	int array2[] = {9, 8, 7};
        2:  152:	vector<int> og2 (array2, array2 + sizeof(array2) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
        -:  153:
        1:  154:        int real[] = {1, 2, 2, 1};
        2:  155:        vector<int> real_answer (real, real + sizeof(real) /sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
        2:  156:        vector<int> output(4, 0);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
        1:  157:        vector<int>::iterator og_b = og.begin();
call    0 returned 100%
        1:  158:        vector<int>::iterator og_e = og.end();
call    0 returned 100%
        1:  159:	vector<int>::iterator og2_b = og2.begin();
call    0 returned 100%
        1:  160:        vector<int>::iterator og2_e = og2.end();
call    0 returned 100%
        1:  161:        vector<int>::iterator output_b = output.begin();
call    0 returned 100%
        -:  162:
        1:  163:        vector<int>::iterator output_e = plus_digits(og_b, og_e, og2_b, og2_e, output_b);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:  164:
        2:  165:        ASSERT_EQ(real_answer, output);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 returned 100%
branch 21 taken 100%
branch 22 taken 0%
call   23 returned 100%
branch 24 taken 100%
branch 25 taken 0%
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
        -:  166:
        -:  167:}
        -:  168:
function _ZN33IntegerFixture_plus_digits_2_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN33IntegerFixture_plus_digits_2_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN33IntegerFixture_plus_digits_2_Test8TestBodyEv called 1 returned 100% blocks executed 55%
function _ZN33IntegerFixture_plus_digits_2_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  169:TEST(IntegerFixture, plus_digits_2) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  170:        //( 1 ) <- carries
        -:  171:        // 002
        -:  172:        //+
        -:  173:        // 789
        -:  174:        //------
        -:  175:        // 791
        1:  176:        int array[] = {2};
        1:  177:        vector<int> og (array, array + sizeof(array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        1:  178:        int array2[] = {9, 8, 7};
        2:  179:        vector<int> og2 (array2, array2 + sizeof(array2) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
        -:  180:
        1:  181:        int real[] = {1, 9, 7};
        2:  182:        vector<int> real_answer (real, real + sizeof(real) /sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
        2:  183:        vector<int> output(3, 0);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
        1:  184:        vector<int>::iterator og_b = og.begin();
call    0 returned 100%
        1:  185:        vector<int>::iterator og_e = og.end();
call    0 returned 100%
        1:  186:        vector<int>::iterator og2_b = og2.begin();
call    0 returned 100%
        1:  187:        vector<int>::iterator og2_e = og2.end();
call    0 returned 100%
        1:  188:        vector<int>::iterator output_b = output.begin();
call    0 returned 100%
        -:  189:
        1:  190:        vector<int>::iterator output_e = plus_digits(og_b, og_e, og2_b, og2_e, output_b);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:  191:
        2:  192:        ASSERT_EQ(real_answer, output);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 returned 100%
branch 21 taken 100%
branch 22 taken 0%
call   23 returned 100%
branch 24 taken 100%
branch 25 taken 0%
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
        -:  193:
        -:  194:}
        -:  195:
function _ZN33IntegerFixture_plus_digits_3_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN33IntegerFixture_plus_digits_3_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN33IntegerFixture_plus_digits_3_Test8TestBodyEv called 1 returned 100% blocks executed 55%
function _ZN33IntegerFixture_plus_digits_3_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  196:TEST(IntegerFixture, plus_digits_3) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  197:        //(1  ) <- carries
        -:  198:        // 888
        -:  199:        //+
        -:  200:        //  20
        -:  201:        //------
        -:  202:        // 908
        1:  203:        int array[] = {8, 8, 8};
        1:  204:        vector<int> og (array, array + sizeof(array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        1:  205:        int array2[] = {0, 2};
        2:  206:        vector<int> og2 (array2, array2 + sizeof(array2) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
        -:  207:
        1:  208:        int real[] = {8, 0, 9};
        2:  209:        vector<int> real_answer (real, real + sizeof(real) /sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
        2:  210:        vector<int> output(3, 0);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
        1:  211:        vector<int>::iterator og_b = og.begin();
call    0 returned 100%
        1:  212:        vector<int>::iterator og_e = og.end();
call    0 returned 100%
        1:  213:        vector<int>::iterator og2_b = og2.begin();
call    0 returned 100%
        1:  214:        vector<int>::iterator og2_e = og2.end();
call    0 returned 100%
        1:  215:        vector<int>::iterator output_b = output.begin();
call    0 returned 100%
        -:  216:
        1:  217:        vector<int>::iterator output_e = plus_digits(og_b, og_e, og2_b, og2_e, output_b);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:  218:
        2:  219:        ASSERT_EQ(real_answer, output);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 returned 100%
branch 21 taken 100%
branch 22 taken 0%
call   23 returned 100%
branch 24 taken 100%
branch 25 taken 0%
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
        -:  220:
        -:  221:}
        -:  222:
        -:  223:// ----
        -:  224:// minus_digits
        -:  225:// ----
        -:  226:
function _ZN34IntegerFixture_minus_digits_1_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN34IntegerFixture_minus_digits_1_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN34IntegerFixture_minus_digits_1_Test8TestBodyEv called 1 returned 100% blocks executed 55%
function _ZN34IntegerFixture_minus_digits_1_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  227:TEST(IntegerFixture, minus_digits_1) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  228:        //(   ) <- borrows
        -:  229:        // 789
        -:  230:        //-
        -:  231:        // 432
        -:  232:        //------
        -:  233:        // 357
        1:  234:        int array[] = {9, 8, 7};
        1:  235:        vector<int> og (array, array + sizeof(array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        1:  236:        int array2[] = {2, 3, 4};
        2:  237:        vector<int> og2 (array2, array2 + sizeof(array2) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
        -:  238:
        1:  239:        int real[] = {7, 5, 3};
        2:  240:        vector<int> real_answer (real, real + sizeof(real) /sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
        2:  241:        vector<int> output(3, 0);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
        1:  242:        vector<int>::iterator og_b = og.begin();
call    0 returned 100%
        1:  243:        vector<int>::iterator og_e = og.end();
call    0 returned 100%
        1:  244:        vector<int>::iterator og2_b = og2.begin();
call    0 returned 100%
        1:  245:        vector<int>::iterator og2_e = og2.end();
call    0 returned 100%
        1:  246:        vector<int>::iterator output_b = output.begin();
call    0 returned 100%
        -:  247:
        1:  248:        vector<int>::iterator output_e = minus_digits(og_b, og_e, og2_b, og2_e, output_b);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:  249:
        2:  250:        ASSERT_EQ(real_answer, output);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 returned 100%
branch 21 taken 100%
branch 22 taken 0%
call   23 returned 100%
branch 24 taken 100%
branch 25 taken 0%
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
        -:  251:
        -:  252:}
        -:  253:
function _ZN34IntegerFixture_minus_digits_2_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN34IntegerFixture_minus_digits_2_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN34IntegerFixture_minus_digits_2_Test8TestBodyEv called 1 returned 100% blocks executed 55%
function _ZN34IntegerFixture_minus_digits_2_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  254:TEST(IntegerFixture, minus_digits_2) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  255:        //( 1 ) <- borrows
        -:  256:        // 987
        -:  257:        //-
        -:  258:        // 009
        -:  259:        //------
        -:  260:        // 978
        1:  261:        int array[] = {7, 8 ,9};
        1:  262:        vector<int> og (array, array + sizeof(array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        1:  263:        int array2[] = {9};
        2:  264:        vector<int> og2 (array2, array2 + sizeof(array2) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
        -:  265:
        1:  266:        int real[] = {8, 7, 9};
        2:  267:        vector<int> real_answer (real, real + sizeof(real) /sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
        2:  268:        vector<int> output(3, 0);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
        1:  269:        vector<int>::iterator og_b = og.begin();
call    0 returned 100%
        1:  270:        vector<int>::iterator og_e = og.end();
call    0 returned 100%
        1:  271:        vector<int>::iterator og2_b = og2.begin();
call    0 returned 100%
        1:  272:        vector<int>::iterator og2_e = og2.end();
call    0 returned 100%
        1:  273:        vector<int>::iterator output_b = output.begin();
call    0 returned 100%
        -:  274:
        1:  275:        vector<int>::iterator output_e = minus_digits(og_b, og_e, og2_b, og2_e, output_b);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:  276:
        2:  277:        ASSERT_EQ(real_answer, output);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 returned 100%
branch 21 taken 100%
branch 22 taken 0%
call   23 returned 100%
branch 24 taken 100%
branch 25 taken 0%
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
        -:  278:
        -:  279:}
        -:  280:
function _ZN34IntegerFixture_minus_digits_3_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN34IntegerFixture_minus_digits_3_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN34IntegerFixture_minus_digits_3_Test8TestBodyEv called 1 returned 100% blocks executed 55%
function _ZN34IntegerFixture_minus_digits_3_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  281:TEST(IntegerFixture, minus_digits_3) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  282:        //( 1 ) <- borrows
        -:  283:        // 955
        -:  284:        //-
        -:  285:        // 587
        -:  286:        //------
        -:  287:        // 368
        1:  288:        int array[] = {5, 5, 9};
        1:  289:        vector<int> og (array, array + sizeof(array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        1:  290:        int array2[] = {7, 8, 5};
        2:  291:        vector<int> og2 (array2, array2 + sizeof(array2) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
        -:  292:
        1:  293:        int real[] = {8, 6, 3};
        2:  294:        vector<int> real_answer (real, real + sizeof(real) /sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
        2:  295:        vector<int> output(3, 0);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
        1:  296:        vector<int>::iterator og_b = og.begin();
call    0 returned 100%
        1:  297:        vector<int>::iterator og_e = og.end();
call    0 returned 100%
        1:  298:        vector<int>::iterator og2_b = og2.begin();
call    0 returned 100%
        1:  299:        vector<int>::iterator og2_e = og2.end();
call    0 returned 100%
        1:  300:        vector<int>::iterator output_b = output.begin();
call    0 returned 100%
        -:  301:
        1:  302:        vector<int>::iterator output_e = minus_digits(og_b, og_e, og2_b, og2_e, output_b);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:  303:
        2:  304:        ASSERT_EQ(real_answer, output);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 returned 100%
branch 21 taken 100%
branch 22 taken 0%
call   23 returned 100%
branch 24 taken 100%
branch 25 taken 0%
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
        -:  305:
        -:  306:}
        -:  307:
        -:  308:
function _ZN39IntegerFixture_multiplies_digits_1_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN39IntegerFixture_multiplies_digits_1_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN39IntegerFixture_multiplies_digits_1_Test8TestBodyEv called 1 returned 100% blocks executed 55%
function _ZN39IntegerFixture_multiplies_digits_1_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  309:TEST(IntegerFixture, multiplies_digits_1) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  310:        using namespace std;
        -:  311:        //std::vector<int> input  (4, 100);
        -:  312:
        1:  313:    	int array[] = {3, 2, 1};
        1:  314:        std::vector<int> og (array, array + sizeof(array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        2:  315:        std::vector<int> of (array, array + sizeof(array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
        -:  316:    	
        2:  317:        std::vector<int> output(6, 0);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
call   10 never executed
        1:  318:        std::vector<int>::iterator og_b = og.begin();
call    0 returned 100%
        1:  319:        std::vector<int>::iterator og_e = og.end();
call    0 returned 100%
        1:  320:        std::vector<int>::iterator of_b = of.begin();
call    0 returned 100%
        1:  321:        std::vector<int>::iterator of_e = of.end();
call    0 returned 100%
        1:  322:        std::vector<int>::iterator output_b = output.begin();
call    0 returned 100%
        1:  323:	    std::vector<int>::iterator result = multiplies_digits(og_b, og_e, of_b, of_e, output_b);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  324:        int r_array[] = {9, 2, 1, 5, 1};
        2:  325:        std::vector<int>  correct (r_array, r_array + sizeof(r_array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
        1:  326:        if (*(--result)==0){
call    0 returned 100%
call    1 returned 100%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
    #####:  327:            output.resize(5);
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  328:        }
        -:  329:        
        2:  330:	    ASSERT_TRUE(equal(correct.begin(), correct.end(), output.begin()));
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
branch 23 never executed
branch 24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 returned 100%
branch 32 taken 100%
branch 33 taken 0%
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
        -:  331:        
        -:  332:}
        -:  333:    //	ASSERT_TRUE(equal(correct.begin(), correct.end(), output.begin()));
        -:  334:        
        -:  335:
function _ZN39IntegerFixture_multiplies_digits_2_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN39IntegerFixture_multiplies_digits_2_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN39IntegerFixture_multiplies_digits_2_Test8TestBodyEv called 1 returned 100% blocks executed 55%
function _ZN39IntegerFixture_multiplies_digits_2_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  336:TEST(IntegerFixture, multiplies_digits_2) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  337:        using namespace std;
        -:  338:        //std::vector<int> input  (4, 100);
        -:  339:
        1:  340:    	int array[] = {9, 9, 9};
        1:  341:        std::vector<int> og (array, array + sizeof(array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        2:  342:        std::vector<int> of (array, array + sizeof(array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
        -:  343:    	
        2:  344:        std::vector<int> output(6, 0);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
call   10 never executed
        1:  345:        std::vector<int>::iterator og_b = og.begin();
call    0 returned 100%
        1:  346:        std::vector<int>::iterator og_e = og.end();
call    0 returned 100%
        1:  347:        std::vector<int>::iterator of_b = of.begin();
call    0 returned 100%
        1:  348:        std::vector<int>::iterator of_e = of.end();
call    0 returned 100%
        1:  349:        std::vector<int>::iterator output_b = output.begin();
call    0 returned 100%
        1:  350:	    std::vector<int>::iterator result = multiplies_digits(og_b, og_e, of_b, of_e, output_b);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  351:        int r_array[] = {1,0,0,8,9,9};
        2:  352:        std::vector<int>  correct (r_array, r_array + sizeof(r_array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
        1:  353:        if (*(--result)==0){
call    0 returned 100%
call    1 returned 100%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
    #####:  354:            output.resize(5);
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  355:        }
        -:  356:        
        2:  357:    	ASSERT_TRUE(equal(correct.begin(), correct.end(), output.begin()));
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
branch 23 never executed
branch 24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 returned 100%
branch 32 taken 100%
branch 33 taken 0%
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
        -:  358:        
        -:  359:}
        -:  360:
function _ZN39IntegerFixture_multiplies_digits_3_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN39IntegerFixture_multiplies_digits_3_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN39IntegerFixture_multiplies_digits_3_Test8TestBodyEv called 1 returned 100% blocks executed 55%
function _ZN39IntegerFixture_multiplies_digits_3_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  361:TEST(IntegerFixture, multiplies_digits_3) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  362:        using namespace std;
        -:  363:        //std::vector<int> input  (4, 100);
        -:  364:
        1:  365:    	int array[] = {9, 9, 9};
        1:  366:        std::vector<int> og (array, array + sizeof(array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        1:  367:        int array2 []= {0};
        2:  368:        std::vector<int> of (array2, array2 + sizeof(array2) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
        -:  369:    	
        2:  370:        std::vector<int> output(6, 0);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
call   10 never executed
        1:  371:        std::vector<int>::iterator og_b = og.begin();
call    0 returned 100%
        1:  372:        std::vector<int>::iterator og_e = og.end();
call    0 returned 100%
        1:  373:        std::vector<int>::iterator of_b = of.begin();
call    0 returned 100%
        1:  374:        std::vector<int>::iterator of_e = of.end();
call    0 returned 100%
        1:  375:        std::vector<int>::iterator output_b = output.begin();
call    0 returned 100%
        1:  376:	    std::vector<int>::iterator result = multiplies_digits(og_b, og_e, of_b, of_e, output_b);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  377:        int r_array[] = {0};
        2:  378:        std::vector<int>  correct (r_array, r_array + sizeof(r_array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
        2:  379:    	ASSERT_EQ(*output_b, 0);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 0% (fallthrough)
branch  6 taken 100%
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
call   20 never executed
call   21 returned 100%
branch 22 taken 100%
branch 23 taken 0%
call   24 returned 100%
branch 25 taken 100%
branch 26 taken 0%
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
        -:  380:        
        -:  381:}
function _ZN39IntegerFixture_multiplies_digits_4_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN39IntegerFixture_multiplies_digits_4_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN39IntegerFixture_multiplies_digits_4_Test8TestBodyEv called 1 returned 100% blocks executed 55%
function _ZN39IntegerFixture_multiplies_digits_4_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  382:TEST(IntegerFixture, multiplies_digits_4) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  383:        using namespace std;
        -:  384:        //std::vector<int> input  (4, 100);
        -:  385:
        1:  386:    	int array[] = {9, 9, 9};
        1:  387:        std::vector<int> og (array, array + sizeof(array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        1:  388:        int array2 []= {0};
        2:  389:        std::vector<int> of (array2, array2 + sizeof(array2) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
        -:  390:    	
        2:  391:        std::vector<int> output(6, 0);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
call    9 never executed
call   10 never executed
        1:  392:        std::vector<int>::iterator og_b = og.begin();
call    0 returned 100%
        1:  393:        std::vector<int>::iterator og_e = og.end();
call    0 returned 100%
        1:  394:        std::vector<int>::iterator of_b = of.begin();
call    0 returned 100%
        1:  395:        std::vector<int>::iterator of_e = of.end();
call    0 returned 100%
        1:  396:        std::vector<int>::iterator output_b = output.begin();
call    0 returned 100%
        1:  397:	    std::vector<int>::iterator result = multiplies_digits(og_b, og_e, of_b, of_e, output_b);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  398:        int r_array[] = {0};
        2:  399:        std::vector<int>  correct (r_array, r_array + sizeof(r_array) / sizeof(int));
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100%
branch  7 taken 0%
call    8 never executed
        2:  400:    	ASSERT_TRUE(equal(correct.begin(),correct.end(), output.begin()));
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
branch 23 never executed
branch 24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 returned 100%
branch 32 taken 100%
branch 33 taken 0%
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
        -:  401:        
        -:  402:}
        -:  403:
        -:  404:
        -:  405:
        -:  406:
function _ZN27IntegerFixture_valid_1_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN27IntegerFixture_valid_1_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN27IntegerFixture_valid_1_Test8TestBodyEv called 1 returned 100% blocks executed 33%
function _ZN27IntegerFixture_valid_1_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  407:TEST(IntegerFixture, valid_1) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  408:        using namespace std;
        -:  409:        //std::vector<int> input  (4, 100)
        -:  410:        try{
        2:  411:            Integer <int> n = Integer<int>("13a");
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 0% (fallthrough)
branch  6 taken 100% (throw)
call    7 never executed
call    8 never executed
call    9 never executed
call   10 returned 100%
branch 11 taken 0% (fallthrough)
branch 12 taken 100%
call   13 never executed
        -:  412:        }
        2:  413:        catch (exception& e){
call    0 returned 100%
call    1 returned 100%
        1:  414:            return;
        -:  415:        }
    #####:  416:    	ASSERT_EQ( 1, 0);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
branch 21 never executed
branch 22 never executed
call   23 returned 100%
call   24 never executed
call   25 never executed
call   26 never executed
        -:  417:}
        -:  418:
function _ZN27IntegerFixture_valid_2_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN27IntegerFixture_valid_2_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN27IntegerFixture_valid_2_Test8TestBodyEv called 1 returned 100% blocks executed 13%
function _ZN27IntegerFixture_valid_2_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  419:TEST(IntegerFixture, valid_2) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  420:        using namespace std;
        -:  421:        //std::vector<int> input  (4, 100)
        -:  422:        try{
        1:  423:            Integer <int> n = Integer<int>(125);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
        -:  424:        }
    =====:  425:        catch (exception& e){
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:  426:            ASSERT_EQ (1,0);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
branch 19 never executed
branch 20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
branch 24 never executed
branch 25 never executed
    =====:  427:        }
        -:  428:}
function _ZN27IntegerFixture_valid_3_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN27IntegerFixture_valid_3_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN27IntegerFixture_valid_3_Test8TestBodyEv called 1 returned 100% blocks executed 13%
function _ZN27IntegerFixture_valid_3_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  429:TEST(IntegerFixture, valid_3) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  430:        using namespace std;
        -:  431:        //std::vector<int> input  (4, 100)
        -:  432:        try{
        1:  433:            Integer <int> n = Integer<int>(129999999);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
        -:  434:        }
    =====:  435:        catch (exception& e){
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:  436:            ASSERT_EQ (1,0);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
branch 19 never executed
branch 20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
branch 24 never executed
branch 25 never executed
    =====:  437:        }
        -:  438:}
function _ZN27IntegerFixture_valid_4_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN27IntegerFixture_valid_4_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN27IntegerFixture_valid_4_Test8TestBodyEv called 1 returned 100% blocks executed 19%
function _ZN27IntegerFixture_valid_4_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  439:TEST(IntegerFixture, valid_4) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  440:        using namespace std;
        -:  441:        //std::vector<int> input  (4, 100)
        -:  442:        try{
        1:  443:            Integer <int> n = Integer<int>("99999999999999999999999999999999999999999999999999999999999999");
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 100% (fallthrough)
branch  6 taken 0% (throw)
call    7 returned 100%
call    8 returned 100%
call    9 returned 100%
call   10 never executed
        -:  444:        }
    =====:  445:        catch (exception& e){
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:  446:            ASSERT_EQ (1,0);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
branch 25 never executed
branch 26 never executed
    =====:  447:        }
        -:  448:}
function _ZN27IntegerFixture_valid_5_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN27IntegerFixture_valid_5_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN27IntegerFixture_valid_5_Test8TestBodyEv called 1 returned 100% blocks executed 13%
function _ZN27IntegerFixture_valid_5_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  449:TEST(IntegerFixture, valid_5) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  450:        using namespace std;
        -:  451:        //std::vector<int> input  (4, 100)
        -:  452:        try{
        1:  453:            Integer <int> n = Integer<int>(0);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
        -:  454:        }
    =====:  455:        catch (exception& e){
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:  456:            ASSERT_EQ (1,0);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
branch 19 never executed
branch 20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
branch 24 never executed
branch 25 never executed
    =====:  457:        }
        -:  458:}
        -:  459:
function _ZN27IntegerFixture_valid_6_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN27IntegerFixture_valid_6_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN27IntegerFixture_valid_6_Test8TestBodyEv called 1 returned 100% blocks executed 72%
function _ZN27IntegerFixture_valid_6_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  460:TEST(IntegerFixture, valid_6) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  461:        using namespace std;
        -:  462:        
        -:  463:        try{
        2:  464:            Integer <int> n = Integer<int>("");
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 0% (fallthrough)
branch  6 taken 100% (throw)
call    7 never executed
call    8 never executed
call    9 never executed
call   10 returned 100%
branch 11 taken 0% (fallthrough)
branch 12 taken 100%
call   13 never executed
        -:  465:        }
        2:  466:        catch (exception& e){
call    0 returned 100%
        2:  467:            return;    
call    0 returned 100%
        -:  468:        }
        -:  469:        //ASSERT_EQ(0,1);
        -:  470:
        -:  471:}
function _ZN27IntegerFixture_valid_7_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN27IntegerFixture_valid_7_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN27IntegerFixture_valid_7_Test8TestBodyEv called 1 returned 100% blocks executed 13%
function _ZN27IntegerFixture_valid_7_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  472:TEST(IntegerFixture, valid_7) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  473:        using namespace std;
        -:  474:        try{
        1:  475:            Integer <int, std::deque<int> > n = Integer<int, std::deque<int> >(129999999);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
        -:  476:        }
    =====:  477:        catch (exception& e){
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:  478:            ASSERT_EQ (1,0);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
branch 19 never executed
branch 20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
branch 24 never executed
branch 25 never executed
    =====:  479:        }
        -:  480:}
function _ZN27IntegerFixture_valid_8_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN27IntegerFixture_valid_8_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN27IntegerFixture_valid_8_Test8TestBodyEv called 1 returned 100% blocks executed 13%
function _ZN27IntegerFixture_valid_8_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  481:TEST(IntegerFixture, valid_8) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  482:        using namespace std;
        -:  483:        try{
        1:  484:            Integer <int, std::deque<int> > n = Integer<int, std::deque<int> >(-12999);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
        -:  485:        }
    =====:  486:        catch (exception& e){
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:  487:            ASSERT_EQ (1,0);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
branch 19 never executed
branch 20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
branch 24 never executed
branch 25 never executed
    =====:  488:        }
        -:  489:}
function _ZN27IntegerFixture_valid_9_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN27IntegerFixture_valid_9_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN27IntegerFixture_valid_9_Test8TestBodyEv called 1 returned 100% blocks executed 19%
function _ZN27IntegerFixture_valid_9_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  490:TEST(IntegerFixture, valid_9) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  491:        using namespace std;
        -:  492:        try{
        1:  493:            Integer <int, std::deque<int> > n = Integer<int, std::deque<int> >("-12999999");
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 100% (fallthrough)
branch  6 taken 0% (throw)
call    7 returned 100%
call    8 returned 100%
call    9 returned 100%
call   10 never executed
        -:  494:        }
    =====:  495:        catch (exception& e){
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
        1:  496:            ASSERT_EQ (1,0);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
branch 25 never executed
branch 26 never executed
    =====:  497:        }
        -:  498:}
        -:  499:
        -:  500:
        -:  501:
        -:  502:
        -:  503:
function _ZN28IntegerFixture_equals_1_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN28IntegerFixture_equals_1_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN28IntegerFixture_equals_1_Test8TestBodyEv called 1 returned 100% blocks executed 46%
function _ZN28IntegerFixture_equals_1_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  504:TEST(IntegerFixture, equals_1) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  505:        using namespace std;
        -:  506:        
        1:  507:        Integer <int> n = Integer<int>(2);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  508:        Integer <int> x = Integer<int> (2);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  509:        ASSERT_TRUE(n==x);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 returned 100%
branch 26 taken 100%
branch 27 taken 0%
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
        -:  510:}
function _ZN28IntegerFixture_equals_2_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN28IntegerFixture_equals_2_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN28IntegerFixture_equals_2_Test8TestBodyEv called 1 returned 100% blocks executed 46%
function _ZN28IntegerFixture_equals_2_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  511:TEST(IntegerFixture, equals_2) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  512:        using namespace std;
        -:  513:        
        1:  514:        Integer <int> n = Integer<int>(3);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  515:        Integer <int> x = Integer<int> (2);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  516:        ASSERT_FALSE(n==x);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 returned 100%
branch 26 taken 100%
branch 27 taken 0%
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
        -:  517:}
function _ZN31IntegerFixture_notequals_1_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN31IntegerFixture_notequals_1_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN31IntegerFixture_notequals_1_Test8TestBodyEv called 1 returned 100% blocks executed 46%
function _ZN31IntegerFixture_notequals_1_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  518:TEST(IntegerFixture, notequals_1) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  519:        using namespace std;
        -:  520:        
        1:  521:        Integer <int> n = Integer<int>(2);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  522:        Integer <int> x = Integer<int> (2);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  523:        ASSERT_FALSE(n!=x);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 returned 100%
branch 26 taken 100%
branch 27 taken 0%
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
        -:  524:}
function _ZN31IntegerFixture_notequals_2_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN31IntegerFixture_notequals_2_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN31IntegerFixture_notequals_2_Test8TestBodyEv called 1 returned 100% blocks executed 46%
function _ZN31IntegerFixture_notequals_2_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  525:TEST(IntegerFixture, notequals_2) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  526:        using namespace std;
        -:  527:        
        1:  528:        Integer <int> n = Integer<int>(3);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  529:        Integer <int> x = Integer<int> (2);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  530:        ASSERT_TRUE(n!=x);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 returned 100%
branch 26 taken 100%
branch 27 taken 0%
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
        -:  531:}
        -:  532:
        -:  533:
        -:  534:
        -:  535:
        -:  536:
        -:  537:
function _ZN32IntegerFixture_timesequal_1_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN32IntegerFixture_timesequal_1_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN32IntegerFixture_timesequal_1_Test8TestBodyEv called 1 returned 100% blocks executed 49%
function _ZN32IntegerFixture_timesequal_1_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  538:TEST(IntegerFixture, timesequal_1) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  539:        using namespace std;
        -:  540:        
        1:  541:        Integer <int> n = Integer<int>(123);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  542:        Integer <int> x = Integer<int> (2);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        1:  543:        n *= x;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  544:        Integer <int> result = Integer<int> (246);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  545:        ASSERT_TRUE(result==n);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 returned 100%
branch 26 taken 100%
branch 27 taken 0%
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
        -:  546:    	
        -:  547:}
        -:  548:
function _ZN32IntegerFixture_timesequal_2_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN32IntegerFixture_timesequal_2_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN32IntegerFixture_timesequal_2_Test8TestBodyEv called 1 returned 100% blocks executed 49%
function _ZN32IntegerFixture_timesequal_2_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  549:TEST(IntegerFixture, timesequal_2) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  550:        using namespace std;
        -:  551:        
        1:  552:        Integer <int> n = Integer<int>(999);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  553:        Integer <int> x = Integer<int> (999);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        1:  554:        n *= x;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  555:        Integer <int> result = Integer<int> (998001);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  556:        ASSERT_TRUE(result==n);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 returned 100%
branch 26 taken 100%
branch 27 taken 0%
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
        -:  557:    	
        -:  558:}
        -:  559:
        -:  560:
function _ZN32IntegerFixture_timesequal_3_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN32IntegerFixture_timesequal_3_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN32IntegerFixture_timesequal_3_Test8TestBodyEv called 1 returned 100% blocks executed 49%
function _ZN32IntegerFixture_timesequal_3_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  561:TEST(IntegerFixture, timesequal_3) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  562:        using namespace std;
        -:  563:        
        1:  564:        Integer <int> n = Integer<int>(123);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  565:        Integer <int> x = Integer<int> (0);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        1:  566:        n *= x;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  567:        Integer <int> result = Integer<int> (0);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  568:        ASSERT_TRUE(result == n);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 returned 100%
branch 26 taken 100%
branch 27 taken 0%
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
        -:  569:}
        -:  570:
        -:  571:
        -:  572:
function _ZN30IntegerFixture_negation_1_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN30IntegerFixture_negation_1_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN30IntegerFixture_negation_1_Test8TestBodyEv called 1 returned 100% blocks executed 49%
function _ZN30IntegerFixture_negation_1_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  573:TEST(IntegerFixture, negation_1) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  574:        using namespace std;
        -:  575:        
        1:  576:        Integer <int> n = Integer<int>(123);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  577:        n = -n;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
call    4 returned 100%
        -:  578:	
        2:  579:        Integer <int> result = Integer<int> (-123);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  580:        ASSERT_TRUE(result == n);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 returned 100%
branch 26 taken 100%
branch 27 taken 0%
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
        -:  581:}
        -:  582:
        -:  583:
function _ZN30IntegerFixture_negation_2_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN30IntegerFixture_negation_2_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN30IntegerFixture_negation_2_Test8TestBodyEv called 1 returned 100% blocks executed 49%
function _ZN30IntegerFixture_negation_2_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  584:TEST(IntegerFixture, negation_2) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  585:        using namespace std;
        -:  586:        
        1:  587:        Integer <int> n = Integer<int>(-123);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  588:        n = -n;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
call    4 returned 100%
        -:  589:	
        2:  590:        Integer <int> result = Integer<int> (123);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  591:        ASSERT_TRUE(result == n);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 returned 100%
branch 26 taken 100%
branch 27 taken 0%
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
        -:  592:}
        -:  593:
        -:  594:
        -:  595:
        -:  596:
        -:  597:
        -:  598:
function _ZN25IntegerFixture_pow_1_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN25IntegerFixture_pow_1_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN25IntegerFixture_pow_1_Test8TestBodyEv called 1 returned 100% blocks executed 47%
function _ZN25IntegerFixture_pow_1_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  599:TEST(IntegerFixture, pow_1) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  600:        using namespace std;
        -:  601:        
        1:  602:        Integer <int> n = Integer<int>(2);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  603:        n.pow(3);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  604:        Integer <int> result = Integer<int> (8);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  605:        ASSERT_TRUE(result==n);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 returned 100%
branch 26 taken 100%
branch 27 taken 0%
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
        -:  606:    	
        -:  607:}
        -:  608:
        -:  609:
function _ZN25IntegerFixture_pow_2_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN25IntegerFixture_pow_2_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN25IntegerFixture_pow_2_Test8TestBodyEv called 1 returned 100% blocks executed 47%
function _ZN25IntegerFixture_pow_2_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  610:TEST(IntegerFixture, pow_2) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  611:        using namespace std;
        -:  612:        
        1:  613:        Integer <int> n = Integer<int>(3);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  614:        n.pow(3);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  615:        Integer <int> result = Integer<int> (27);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  616:        ASSERT_TRUE(result==n);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 returned 100%
branch 26 taken 100%
branch 27 taken 0%
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
        -:  617:    	
        -:  618:}
        -:  619:
        -:  620:
        -:  621:
function _ZN25IntegerFixture_pow_3_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN25IntegerFixture_pow_3_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN25IntegerFixture_pow_3_Test8TestBodyEv called 1 returned 100% blocks executed 27%
function _ZN25IntegerFixture_pow_3_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  622:TEST(IntegerFixture, pow_3) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  623:        using namespace std;
        -:  624:        try{
        1:  625:            Integer <int> n = Integer<int>(0);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  626:            n.pow(3);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  627:            Integer <int> result = Integer<int> (0);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  628:            ASSERT_TRUE(result==n);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 returned 100%
branch 26 taken 100%
branch 27 taken 0%
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
        -:  629:        }
    =====:  630:        catch (exception& e){
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    =====:  631:            ASSERT_EQ(1,0);
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
branch 19 never executed
branch 20 never executed
call   21 never executed
call   22 never executed
call   23 never executed
branch 24 never executed
branch 25 never executed
    =====:  632:        }
        -:  633:    	
        -:  634:}
function _ZN25IntegerFixture_pow_4_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN25IntegerFixture_pow_4_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN25IntegerFixture_pow_4_Test8TestBodyEv called 1 returned 100% blocks executed 14%
function _ZN25IntegerFixture_pow_4_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  635:TEST(IntegerFixture, pow_4) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  636:        using namespace std;
        -:  637:        try{
        1:  638:            Integer <int> n = Integer<int>(0);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  639:            n.pow(0);
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100% (throw)
    #####:  640:            Integer <int> result = Integer<int> (0);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
        1:  641:            ASSERT_TRUE(result==n);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
call   28 never executed
branch 29 never executed
branch 30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 returned 100%
branch 36 taken 0% (fallthrough)
branch 37 taken 100%
call   38 never executed
        -:  642:        }
        2:  643:        catch (exception& e){
call    0 returned 100%
call    1 returned 100%
        1:  644:            return;
        -:  645:        }
    #####:  646:        ASSERT_EQ(1,0);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
branch 21 never executed
branch 22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
        -:  647:}
        -:  648:
        -:  649:
function _ZN25IntegerFixture_pow_5_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN25IntegerFixture_pow_5_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN25IntegerFixture_pow_5_Test8TestBodyEv called 1 returned 100% blocks executed 14%
function _ZN25IntegerFixture_pow_5_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  650:TEST(IntegerFixture, pow_5) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  651:        using namespace std;
        -:  652:        try{
        1:  653:            Integer <int> n = Integer<int>(4);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  654:            n.pow(-2);
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100% (throw)
    #####:  655:            Integer <int> result = Integer<int> (4);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
        1:  656:            ASSERT_TRUE(result==n);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
call   28 never executed
branch 29 never executed
branch 30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 returned 100%
branch 36 taken 0% (fallthrough)
branch 37 taken 100%
call   38 never executed
        -:  657:        }
        2:  658:        catch (exception& e){
call    0 returned 100%
call    1 returned 100%
        1:  659:            return;
        -:  660:        }
    #####:  661:    	ASSERT_EQ(1,0);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
branch 21 never executed
branch 22 never executed
call   23 never executed
call   24 never executed
call   25 never executed
        -:  662:}
        -:  663:
        -:  664:
        -:  665:
        -:  666:
        -:  667:
        -:  668:
function _ZN30IntegerFixture_lessthan_1_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN30IntegerFixture_lessthan_1_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN30IntegerFixture_lessthan_1_Test8TestBodyEv called 1 returned 100% blocks executed 46%
function _ZN30IntegerFixture_lessthan_1_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  669:TEST(IntegerFixture, lessthan_1){
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  670:        using namespace std;
        1:  671:        Integer <int> n = Integer<int>(23);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  672:        Integer <int> m = Integer<int>(22);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  673:        ASSERT_TRUE(m < n);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 returned 100%
branch 26 taken 100%
branch 27 taken 0%
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
        -:  674:}
        -:  675:
        -:  676:
function _ZN30IntegerFixture_lessthan_2_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN30IntegerFixture_lessthan_2_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN30IntegerFixture_lessthan_2_Test8TestBodyEv called 1 returned 100% blocks executed 46%
function _ZN30IntegerFixture_lessthan_2_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  677:TEST(IntegerFixture, lessthan_2){
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  678:        using namespace std;
        1:  679:        Integer <int> n = Integer<int>(-23);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  680:        Integer <int> m = Integer<int>(-22);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  681:        ASSERT_TRUE(n < m);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 returned 100%
branch 26 taken 100%
branch 27 taken 0%
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
        -:  682:}
        -:  683:
function _ZN30IntegerFixture_lessthan_3_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN30IntegerFixture_lessthan_3_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN30IntegerFixture_lessthan_3_Test8TestBodyEv called 1 returned 100% blocks executed 46%
function _ZN30IntegerFixture_lessthan_3_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  684:TEST(IntegerFixture, lessthan_3){
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  685:        using namespace std;
        1:  686:        Integer <int> n = Integer<int>(23);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  687:        Integer <int> m = Integer<int>(-22);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  688:        ASSERT_TRUE(m < n);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 returned 100%
branch 26 taken 100%
branch 27 taken 0%
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
        -:  689:}
        -:  690:
function _ZN30IntegerFixture_lessthan_4_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN30IntegerFixture_lessthan_4_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN30IntegerFixture_lessthan_4_Test8TestBodyEv called 1 returned 100% blocks executed 46%
function _ZN30IntegerFixture_lessthan_4_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  691:TEST(IntegerFixture, lessthan_4){
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  692:        using namespace std;
        1:  693:        Integer <int> n = Integer<int>(-23);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  694:        Integer <int> m = Integer<int>(22);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  695:        ASSERT_TRUE(n < m);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 returned 100%
branch 26 taken 100%
branch 27 taken 0%
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
        -:  696:}
        -:  697:
function _ZN33IntegerFixture_minusequals_1_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN33IntegerFixture_minusequals_1_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN33IntegerFixture_minusequals_1_Test8TestBodyEv called 1 returned 100% blocks executed 49%
function _ZN33IntegerFixture_minusequals_1_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  698:TEST(IntegerFixture, minusequals_1){
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  699:        using namespace std;
        1:  700:        Integer <int> n = Integer<int>(23);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  701:        Integer <int> m = Integer<int>(22);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  702:        Integer <int> output = Integer<int>(1);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  703:	ASSERT_TRUE((n -= m) == output );
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
branch 23 never executed
branch 24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 returned 100%
branch 32 taken 100%
branch 33 taken 0%
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
        -:  704:}
        -:  705:
        -:  706:
function _ZN33IntegerFixture_minusequals_2_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN33IntegerFixture_minusequals_2_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN33IntegerFixture_minusequals_2_Test8TestBodyEv called 1 returned 100% blocks executed 49%
function _ZN33IntegerFixture_minusequals_2_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  707:TEST(IntegerFixture, minusequals_2){
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  708:        using namespace std;
        1:  709:        Integer <int> n = Integer<int>(23);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  710:        Integer <int> m = Integer<int>(12);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  711:        Integer <int> output = Integer<int>(11);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  712:        ASSERT_TRUE((n -= m) == output );
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
branch 23 never executed
branch 24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 returned 100%
branch 32 taken 100%
branch 33 taken 0%
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
        -:  713:}
        -:  714:
function _ZN33IntegerFixture_minusequals_3_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN33IntegerFixture_minusequals_3_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN33IntegerFixture_minusequals_3_Test8TestBodyEv called 1 returned 100% blocks executed 49%
function _ZN33IntegerFixture_minusequals_3_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  715:TEST(IntegerFixture, minusequals_3){
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  716:        using namespace std;
        1:  717:        Integer <int> n = Integer<int>(9000);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  718:        Integer <int> m = Integer<int>(1);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  719:        Integer <int> output = Integer<int>(8999);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        1:  720:        n-=m;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  721:	ASSERT_TRUE((n) == output );
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 returned 100%
branch 26 taken 100%
branch 27 taken 0%
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
        -:  722:}
        -:  723:
function _ZN33IntegerFixture_minusequals_4_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN33IntegerFixture_minusequals_4_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN33IntegerFixture_minusequals_4_Test8TestBodyEv called 1 returned 100% blocks executed 49%
function _ZN33IntegerFixture_minusequals_4_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  724:TEST(IntegerFixture, minusequals_4){
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  725:        using namespace std;
        1:  726:        Integer <int> n = Integer<int>(-9);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  727:        Integer <int> m = Integer<int>(-8);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  728:        Integer <int> output = Integer<int>(-1);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  729:        ASSERT_TRUE((n -= m) == output );
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
branch 23 never executed
branch 24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 returned 100%
branch 32 taken 100%
branch 33 taken 0%
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
        -:  730:}
        -:  731:
        -:  732:
function _ZN33IntegerFixture_minusequals_5_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN33IntegerFixture_minusequals_5_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN33IntegerFixture_minusequals_5_Test8TestBodyEv called 1 returned 100% blocks executed 49%
function _ZN33IntegerFixture_minusequals_5_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  733:TEST(IntegerFixture, minusequals_5){
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  734:        using namespace std;
        1:  735:        Integer <int> n = Integer<int>(-8);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  736:        Integer <int> m = Integer<int>(-9);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  737:        Integer <int> output = Integer<int>(1);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  738:        ASSERT_TRUE((n -= m) == output );
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
branch 23 never executed
branch 24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 returned 100%
branch 32 taken 100%
branch 33 taken 0%
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
        -:  739:}
        -:  740:
function _ZN33IntegerFixture_minusequals_6_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN33IntegerFixture_minusequals_6_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN33IntegerFixture_minusequals_6_Test8TestBodyEv called 1 returned 100% blocks executed 49%
function _ZN33IntegerFixture_minusequals_6_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  741:TEST(IntegerFixture, minusequals_6){
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  742:        using namespace std;
        1:  743:        Integer <int> n = Integer<int>(-9);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  744:        Integer <int> m = Integer<int>(1);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  745:        Integer <int> output = Integer<int>(-10);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        1:  746:        n-=m;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  747:	ASSERT_TRUE((n) == output );
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
call   16 never executed
branch 17 never executed
branch 18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
call   23 never executed
call   24 never executed
call   25 returned 100%
branch 26 taken 100%
branch 27 taken 0%
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
        -:  748:}
        -:  749:
function _ZN33IntegerFixture_minusequals_7_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN33IntegerFixture_minusequals_7_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN33IntegerFixture_minusequals_7_Test8TestBodyEv called 1 returned 100% blocks executed 49%
function _ZN33IntegerFixture_minusequals_7_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  750:TEST(IntegerFixture, minusequals_7){
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  751:        using namespace std;
        1:  752:        Integer <int> n = Integer<int>(-1);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  753:        Integer <int> m = Integer<int>(9);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  754:        Integer <int> output = Integer<int>(-10);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  755:        ASSERT_TRUE((n -= m) == output );
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
branch 23 never executed
branch 24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 returned 100%
branch 32 taken 100%
branch 33 taken 0%
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
        -:  756:}
        -:  757:
function _ZN33IntegerFixture_minusequals_8_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN33IntegerFixture_minusequals_8_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN33IntegerFixture_minusequals_8_Test8TestBodyEv called 1 returned 100% blocks executed 49%
function _ZN33IntegerFixture_minusequals_8_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  758:TEST(IntegerFixture, minusequals_8){
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  759:        using namespace std;
        1:  760:        Integer <int> n = Integer<int>(234);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  761:        Integer <int> m = Integer<int>(-2);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  762:        Integer <int> output = Integer<int>(236);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  763:        ASSERT_TRUE((n -= m) == output );
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
branch 23 never executed
branch 24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 returned 100%
branch 32 taken 100%
branch 33 taken 0%
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
        -:  764:}
        -:  765:
function _ZN33IntegerFixture_minusequals_9_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN33IntegerFixture_minusequals_9_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN33IntegerFixture_minusequals_9_Test8TestBodyEv called 1 returned 100% blocks executed 49%
function _ZN33IntegerFixture_minusequals_9_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  766:TEST(IntegerFixture, minusequals_9){
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  767:        using namespace std;
        1:  768:        Integer <int> n = Integer<int>(-2);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  769:        Integer <int> m = Integer<int>(234);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  770:	Integer <int> output = Integer<int>(-236);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  771:        ASSERT_TRUE((n -= m) == output );
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
branch 23 never executed
branch 24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 returned 100%
branch 32 taken 100%
branch 33 taken 0%
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
        -:  772:}
        -:  773:
function _ZN34IntegerFixture_minusequals_10_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN34IntegerFixture_minusequals_10_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN34IntegerFixture_minusequals_10_Test8TestBodyEv called 1 returned 100% blocks executed 49%
function _ZN34IntegerFixture_minusequals_10_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  774:TEST(IntegerFixture, minusequals_10){
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  775:        using namespace std;
        1:  776:        Integer <int> n = Integer<int>(-45);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  777:        Integer <int> m = Integer<int>(5);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  778:        Integer <int> output = Integer<int>(-50);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  779:        ASSERT_TRUE((n -= m) == output );
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
branch 23 never executed
branch 24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 returned 100%
branch 32 taken 100%
branch 33 taken 0%
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
        -:  780:}
        -:  781:
function _ZN34IntegerFixture_minusequals_11_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN34IntegerFixture_minusequals_11_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN34IntegerFixture_minusequals_11_Test8TestBodyEv called 1 returned 100% blocks executed 49%
function _ZN34IntegerFixture_minusequals_11_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  782:TEST(IntegerFixture, minusequals_11){
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  783:        using namespace std;
        1:  784:        Integer <int> n = Integer<int>(-45);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  785:        Integer <int> m = Integer<int>(-5);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  786:        Integer <int> output = Integer<int>(-40);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  787:        ASSERT_TRUE((n -= m) == output );
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
branch 23 never executed
branch 24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 returned 100%
branch 32 taken 100%
branch 33 taken 0%
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
        -:  788:}
        -:  789:
function _ZN32IntegerFixture_plusequals_1_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN32IntegerFixture_plusequals_1_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN32IntegerFixture_plusequals_1_Test8TestBodyEv called 1 returned 100% blocks executed 49%
function _ZN32IntegerFixture_plusequals_1_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  790:TEST(IntegerFixture, plusequals_1){
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  791:        using namespace std;
        1:  792:        Integer <int> n = Integer<int>(2);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  793:        Integer <int> m = Integer<int>(22);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  794:        Integer <int> output = Integer<int>(24);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  795:        ASSERT_TRUE((n += m) == output );
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
branch 23 never executed
branch 24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 returned 100%
branch 32 taken 100%
branch 33 taken 0%
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
        -:  796:}
        -:  797:
function _ZN32IntegerFixture_plusequals_2_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN32IntegerFixture_plusequals_2_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN32IntegerFixture_plusequals_2_Test8TestBodyEv called 1 returned 100% blocks executed 49%
function _ZN32IntegerFixture_plusequals_2_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  798:TEST(IntegerFixture, plusequals_2){
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  799:        using namespace std;
        1:  800:        Integer <int> n = Integer<int>(23);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  801:        Integer <int> m = Integer<int>(12);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  802:        Integer <int> output = Integer<int>(35);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  803:        ASSERT_TRUE((n += m) == output );
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
branch 23 never executed
branch 24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 returned 100%
branch 32 taken 100%
branch 33 taken 0%
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
        -:  804:}
        -:  805:
function _ZN32IntegerFixture_plusequals_3_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN32IntegerFixture_plusequals_3_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN32IntegerFixture_plusequals_3_Test8TestBodyEv called 1 returned 100% blocks executed 49%
function _ZN32IntegerFixture_plusequals_3_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  806:TEST(IntegerFixture, plusequals_3){
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  807:        using namespace std;
        1:  808:        Integer <int> n = Integer<int>(8999);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  809:        Integer <int> m = Integer<int>(1);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  810:        Integer <int> output = Integer<int>(9000);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  811:        ASSERT_TRUE((n += m) == output );
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
branch 20 never executed
branch 21 never executed
call   22 never executed
branch 23 never executed
branch 24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
call   28 returned 100%
branch 29 taken 100%
branch 30 taken 0%
call   31 returned 100%
branch 32 taken 100%
branch 33 taken 0%
call   34 never executed
call   35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
        -:  812:}
        -:  813:
function _ZN37IntegerFixture_leftshiftequals_1_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN37IntegerFixture_leftshiftequals_1_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN37IntegerFixture_leftshiftequals_1_Test8TestBodyEv called 1 returned 100% blocks executed 50%
function _ZN37IntegerFixture_leftshiftequals_1_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  814:TEST(IntegerFixture, leftshiftequals_1) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  815:
        1:  816:        Integer <int> k = Integer<int>(1111);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  817:        int n = 2;
        1:  818:        k <<= n;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  819:	Integer <int> real = Integer<int>(111100);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  820:        ASSERT_EQ(real, k);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 returned 100%
branch 21 taken 100%
branch 22 taken 0%
call   23 returned 100%
branch 24 taken 100%
branch 25 taken 0%
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
        -:  821:
        -:  822:}
        -:  823:
function _ZN37IntegerFixture_leftshiftequals_2_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN37IntegerFixture_leftshiftequals_2_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN37IntegerFixture_leftshiftequals_2_Test8TestBodyEv called 1 returned 100% blocks executed 50%
function _ZN37IntegerFixture_leftshiftequals_2_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  824:TEST(IntegerFixture, leftshiftequals_2) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  825:
        1:  826:        Integer <int> k = Integer<int>(4);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  827:        int n = 6;
        1:  828:        k <<= n;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  829:        Integer <int> real = Integer<int>(4000000);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  830:        ASSERT_EQ(real, k);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 returned 100%
branch 21 taken 100%
branch 22 taken 0%
call   23 returned 100%
branch 24 taken 100%
branch 25 taken 0%
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
        -:  831:
        -:  832:}
        -:  833:
function _ZN37IntegerFixture_leftshiftequals_3_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN37IntegerFixture_leftshiftequals_3_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN37IntegerFixture_leftshiftequals_3_Test8TestBodyEv called 1 returned 100% blocks executed 50%
function _ZN37IntegerFixture_leftshiftequals_3_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  834:TEST(IntegerFixture, leftshiftequals_3) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  835:
        1:  836:        Integer <int> k = Integer<int>(70);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  837:        int n = 3;
        1:  838:        k <<= n;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  839:        Integer <int> real = Integer<int>(70000);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  840:        ASSERT_EQ(real, k);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 returned 100%
branch 21 taken 100%
branch 22 taken 0%
call   23 returned 100%
branch 24 taken 100%
branch 25 taken 0%
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
        -:  841:
        -:  842:}
        -:  843:
        -:  844:
function _ZN38IntegerFixture_rightshiftequals_1_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN38IntegerFixture_rightshiftequals_1_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN38IntegerFixture_rightshiftequals_1_Test8TestBodyEv called 1 returned 100% blocks executed 50%
function _ZN38IntegerFixture_rightshiftequals_1_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  845:TEST(IntegerFixture, rightshiftequals_1) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  846:
        1:  847:        Integer <int> k = Integer<int>(1111);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  848:        int n = 2;
        1:  849:        k >>= n;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  850:        Integer <int> real = Integer<int>(11);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  851:        ASSERT_EQ(real, k);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 returned 100%
branch 21 taken 100%
branch 22 taken 0%
call   23 returned 100%
branch 24 taken 100%
branch 25 taken 0%
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
        -:  852:
        -:  853:}
        -:  854:
function _ZN38IntegerFixture_rightshiftequals_2_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN38IntegerFixture_rightshiftequals_2_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN38IntegerFixture_rightshiftequals_2_Test8TestBodyEv called 1 returned 100% blocks executed 50%
function _ZN38IntegerFixture_rightshiftequals_2_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  855:TEST(IntegerFixture, rightshiftequals_2) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  856:
        1:  857:        Integer <int> k = Integer<int>(5678);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  858:        int n = 3;
        1:  859:        k >>= n;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  860:        Integer <int> real = Integer<int>(5);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  861:        ASSERT_EQ(real, k);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 returned 100%
branch 21 taken 100%
branch 22 taken 0%
call   23 returned 100%
branch 24 taken 100%
branch 25 taken 0%
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
        -:  862:
        -:  863:}
        -:  864:
function _ZN38IntegerFixture_rightshiftequals_3_TestD0Ev called 1 returned 100% blocks executed 100%
function _ZN38IntegerFixture_rightshiftequals_3_TestD2Ev called 1 returned 100% blocks executed 75%
function _ZN38IntegerFixture_rightshiftequals_3_Test8TestBodyEv called 1 returned 100% blocks executed 50%
function _ZN38IntegerFixture_rightshiftequals_3_TestC2Ev called 1 returned 100% blocks executed 100%
        5:  865:TEST(IntegerFixture, rightshiftequals_3) {
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
call   10 returned 100%
        -:  866:
        1:  867:        Integer <int> k = Integer<int>(1);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  868:        int n = 1;
        1:  869:        k >>= n;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  870:        Integer <int> real = Integer<int>(0);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100%
branch  5 taken 0%
call    6 never executed
        2:  871:        ASSERT_EQ(real, k);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
call   19 never executed
call   20 returned 100%
branch 21 taken 100%
branch 22 taken 0%
call   23 returned 100%
branch 24 taken 100%
branch 25 taken 0%
call   26 never executed
call   27 never executed
call   28 never executed
call   29 never executed
        -:  872:
function _GLOBAL__sub_I__ZN39IntegerFixture_shift_left_digits_1_Test10test_info_E called 1 returned 100% blocks executed 100%
function _Z41__static_initialization_and_destruction_0ii called 1 returned 100% blocks executed 100%
        3:  873:}
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
        -:  874:
        -:  875:
        -:  876:/*
        -:  877:% ls -al /usr/include/gtest/
        -:  878:...
        -:  879:gtest.h
        -:  880:...
        -:  881:
        -:  882:
        -:  883:
        -:  884:% locate libgtest.a
        -:  885:/usr/lib/libgtest.a
        -:  886:...
        -:  887:
        -:  888:
        -:  889:
        -:  890:% locate libpthread.a
        -:  891:...
        -:  892:/usr/lib32/libpthread.a
        -:  893:
        -:  894:
        -:  895:
        -:  896:% locate libgtest_main.a
        -:  897:/usr/lib/libgtest_main.a
        -:  898:...
        -:  899:
        -:  900:
        -:  901:
        -:  902:% g++-4.8 -fprofile-arcs -ftest-coverage -pedantic -std=c++11 -Wall PFD.c++ TestPFD.c++ -o TestPFD -lgtest -lgtest_main -lpthread
        -:  903:
        -:  904:
        -:  905:
        -:  906:% valgrind TestPFD        >  TestPFD.out 2>&1
        -:  907:% gcov-4.8 -b PFD.c++     >> TestPFD.out
        -:  908:% gcov-4.8 -b TestPFD.c++ >> TestPFD.out
        -:  909:
        -:  910:
        -:  911:
        -:  912:% cat TestPFD.out
        -:  913:==14225== Memcheck, a memory error detector
        -:  914:==14225== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
        -:  915:==14225== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
        -:  916:==14225== Command: TestPFD
        -:  917:==14225==
        -:  918:Running main() from gtest_main.cc
        -:  919:[==========] Running 7 tests from 1 test case.
        -:  920:[----------] Global test environment set-up.
        -:  921:[----------] 7 tests from PFD
        -:  922:[ RUN      ] PFD.read
        -:  923:[       OK ] PFD.read (31 ms)
        -:  924:[ RUN      ] PFD.eval_1
        -:  925:[       OK ] PFD.eval_1 (5 ms)
        -:  926:[ RUN      ] PFD.eval_2
        -:  927:[       OK ] PFD.eval_2 (3 ms)
        -:  928:[ RUN      ] PFD.eval_3
        -:  929:[       OK ] PFD.eval_3 (3 ms)
        -:  930:[ RUN      ] PFD.eval_4
        -:  931:[       OK ] PFD.eval_4 (3 ms)
        -:  932:[ RUN      ] PFD.print
        -:  933:[       OK ] PFD.print (17 ms)
        -:  934:[ RUN      ] PFD.solve
        -:  935:[       OK ] PFD.solve (10 ms)
        -:  936:[----------] 7 tests from PFD (88 ms total)
        -:  937:
        -:  938:[----------] Global test environment tear-down
        -:  939:[==========] 7 tests from 1 test case ran. (132 ms total)
        -:  940:[  PASSED  ] 7 tests.
        -:  941:==14225==
        -:  942:==14225== HEAP SUMMARY:
        -:  943:==14225==     in use at exit: 0 bytes in 0 blocks
        -:  944:==14225==   total heap usage: 495 allocs, 495 frees, 70,302 bytes allocated
        -:  945:==14225==
        -:  946:==14225== All heap blocks were freed -- no leaks are possible
        -:  947:==14225==
        -:  948:==14225== For counts of detected and suppressed errors, rerun with: -v
        -:  949:==14225== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
        -:  950:File 'PFD.c++'
        -:  951:Lines executed:100.00% of 17
        -:  952:Branches executed:100.00% of 18
        -:  953:Taken at least once:61.11% of 18
        -:  954:Calls executed:89.47% of 19
        -:  955:Creating 'PFD.c++.gcov'
        -:  956:...
        -:  957:File 'TestPFD.c++'
        -:  958:Lines executed:100.00% of 26
        -:  959:Branches executed:57.14% of 224
        -:  960:Taken at least once:28.57% of 224
        -:  961:Calls executed:54.07% of 209
        -:  962:Creating 'TestPFD.c++.gcov'
        -:  963:...
        -:  964:*/
